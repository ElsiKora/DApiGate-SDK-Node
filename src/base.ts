/**
 * DApiGate
 * DApiGate `Reaper API` documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// Some imports not used depending on template conditions

import globalAxios from "axios";

import type { Configuration } from "./configuration";
import type { AxiosInstance, RawAxiosRequestConfig } from "axios";

export const BASE_PATH = "https://reaper.dapigate.com".replace(/\/+$/, "");

/**
 *
 * @export
 */
export const COLLECTION_FORMATS = {
	csv: ",",
	pipes: "|",
	ssv: " ",
	tsv: "\t",
};

/**
 *
 * @export
 * @interface RequestArguments
 */
export interface RequestArguments {
	options: RawAxiosRequestConfig;
	url: string;
}

/**
 *
 * @export
 * @class BaseAPI
 */
export class BaseAPI {
	protected configuration: Configuration | undefined;

	constructor(
		configuration?: Configuration,
		protected basePath: string = BASE_PATH,
		protected axios: AxiosInstance = globalAxios,
	) {
		if (configuration) {
			this.configuration = configuration;
			this.basePath = configuration.basePath ?? basePath;
		}
	}
}

/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
export class RequiredError extends Error {
	constructor(
		public field: string,
		message?: string,
	) {
		super(message);
		this.name = "RequiredError";
	}
}

type ServerMap = Record<
	string,
	Array<{
		description: string;
		url: string;
	}>
>;

/**
 *
 * @export
 */
export const operationServerMap: ServerMap = {};
